{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7","program":"C:\\Users\\hclark7\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"io\"","-C","metadata=b19440e0045437b1","-C","extra-filename=-b19440e0045437b1","--out-dir","c:\\Users\\hclark7\\Documents\\GitHub\\Universal-Swarm\\universal-universe\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\hclark7\\Documents\\GitHub\\Universal-Swarm\\universal-universe\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\hclark7\\Documents\\GitHub\\Universal-Swarm\\universal-universe\\target\\rls\\debug\\deps\\libbytes-41588f01a76ce378.rmeta","--extern","futures_core=c:\\Users\\hclark7\\Documents\\GitHub\\Universal-Swarm\\universal-universe\\target\\rls\\debug\\deps\\libfutures_core-1b6730cc3c838826.rmeta","--extern","futures_sink=c:\\Users\\hclark7\\Documents\\GitHub\\Universal-Swarm\\universal-universe\\target\\rls\\debug\\deps\\libfutures_sink-bb4827557d805a12.rmeta","--extern","log=c:\\Users\\hclark7\\Documents\\GitHub\\Universal-Swarm\\universal-universe\\target\\rls\\debug\\deps\\liblog-8bb5f0d933614f75.rmeta","--extern","pin_project_lite=c:\\Users\\hclark7\\Documents\\GitHub\\Universal-Swarm\\universal-universe\\target\\rls\\debug\\deps\\libpin_project_lite-579228ee28f74013.rmeta","--extern","tokio=c:\\Users\\hclark7\\Documents\\GitHub\\Universal-Swarm\\universal-universe\\target\\rls\\debug\\deps\\libtokio-6a83838de13df89d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\hclark7\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\hclark7\\Documents\\GitHub\\Universal-Swarm\\universal-universe\\target\\rls\\debug\\deps\\libtokio_util-b19440e0045437b1.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[3237053006642151721,423729417575938086]},"crate_root":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src","external_crates":[{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3270634090130538391,14263718429753122316]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5532051063976025760,2256364509988431667]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7281929168992546274,2424678954744988439]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[353429176083156877,8877241423562725442]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12196241746694410349,3365331946273478086]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[13433537899495627439,16859208643582984883]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8262757423788146228,17823423584984973278]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15770910386717746279,2673050061768012116]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15973938195753786773,1947565178479551552]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1495831041033125177,733230368880816191]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17679945988426249108,16004284943229030185]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4674106540844190265,14311593861468432536]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[12112277384381649788,786361786206656603]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":14,"id":{"name":"futures_core","disambiguator":[10881957133658929139,472475073454714805]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":15,"id":{"name":"futures_sink","disambiguator":[5621889555184876281,15432104157082254087]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":16,"id":{"name":"tokio","disambiguator":[15611623367865943867,14828835972271842038]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":17,"id":{"name":"winapi","disambiguator":[2782654798977634958,16256341376548248344]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":18,"id":{"name":"mio","disambiguator":[7345667959626109542,9317665014899896950]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","num":19,"id":{"name":"log","disambiguator":[139750858971303255,14734425933343118768]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":20,"id":{"name":"cfg_if","disambiguator":[13278220955559338233,12107244799536649596]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":21,"id":{"name":"ntapi","disambiguator":[12575120703546414044,2259884028305537142]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":22,"id":{"name":"miow","disambiguator":[9422167685329761928,11446618201344744632]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[14568968707701268748,4865951786449375768]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":24,"id":{"name":"bytes","disambiguator":[11339775367606408019,4720729809511408243]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":25,"id":{"name":"once_cell","disambiguator":[11876818128055215859,4430313583243023413]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":26,"id":{"name":"tokio_macros","disambiguator":[10713918403934720987,4781166174390689134]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":27,"id":{"name":"memchr","disambiguator":[3787126087868820276,3697650360714769800]}},{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":28,"id":{"name":"num_cpus","disambiguator":[16869392346332870571,3315132206177394222]}}],"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863060,"byte_end":13863070,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863109,"byte_end":13863116,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863155,"byte_end":13863162,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863324,"byte_end":13863330,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863332,"byte_end":13863343,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863391,"byte_end":13863401,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863450,"byte_end":13863461,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863523,"byte_end":13863543,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863545,"byte_end":13863570,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863619,"byte_end":13863629,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863631,"byte_end":13863646,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863711,"byte_end":13863728,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863730,"byte_end":13863752,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":496}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13955297,"byte_end":13955305,"line_start":13,"line_end":13,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13955336,"byte_end":13955348,"line_start":14,"line_end":14,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13955379,"byte_end":13955391,"line_start":15,"line_end":15,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13955415,"byte_end":13955428,"line_start":16,"line_end":16,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13955430,"byte_end":13955444,"line_start":16,"line_end":16,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":1308}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":496},{"krate":0,"index":1308},{"krate":0,"index":14},{"krate":0,"index":378},{"krate":0,"index":447}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1174}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13852788,"byte_end":13852841,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13852842,"byte_end":13852845,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13852846,"byte_end":13852921,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13852922,"byte_end":13852987,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13852988,"byte_end":13852991,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13852992,"byte_end":13853072,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853073,"byte_end":13853148,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853149,"byte_end":13853197,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853198,"byte_end":13853201,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853202,"byte_end":13853225,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853226,"byte_end":13853229,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853230,"byte_end":13853309,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853310,"byte_end":13853389,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853390,"byte_end":13853461,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853462,"byte_end":13853532,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853533,"byte_end":13853611,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853612,"byte_end":13853688,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853689,"byte_end":13853722,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853723,"byte_end":13853726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853727,"byte_end":13853807,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853808,"byte_end":13853888,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853889,"byte_end":13853939,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853940,"byte_end":13853943,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853944,"byte_end":13853995,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13853996,"byte_end":13854045,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854046,"byte_end":13854097,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854098,"byte_end":13854101,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854102,"byte_end":13854167,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854168,"byte_end":13854171,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854172,"byte_end":13854249,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854250,"byte_end":13854291,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854292,"byte_end":13854295,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854296,"byte_end":13854376,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854377,"byte_end":13854456,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854457,"byte_end":13854535,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854536,"byte_end":13854615,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854616,"byte_end":13854630,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854631,"byte_end":13854634,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854635,"byte_end":13854714,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854715,"byte_end":13854794,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854795,"byte_end":13854812,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854813,"byte_end":13854816,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854817,"byte_end":13854894,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854895,"byte_end":13854974,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13854975,"byte_end":13855052,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855053,"byte_end":13855123,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855124,"byte_end":13855173,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855174,"byte_end":13855177,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855178,"byte_end":13855191,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855192,"byte_end":13855224,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855225,"byte_end":13855292,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855293,"byte_end":13855407,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855408,"byte_end":13855445,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855446,"byte_end":13855507,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855508,"byte_end":13855557,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855558,"byte_end":13855561,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855562,"byte_end":13855603,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855604,"byte_end":13855614,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855615,"byte_end":13855699,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855700,"byte_end":13855756,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855757,"byte_end":13855760,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855761,"byte_end":13855782,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855783,"byte_end":13855850,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855851,"byte_end":13855879,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855880,"byte_end":13855893,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855894,"byte_end":13855912,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855913,"byte_end":13855922,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855923,"byte_end":13855926,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855927,"byte_end":13855986,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13855987,"byte_end":13856011,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856012,"byte_end":13856021,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856022,"byte_end":13856027,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856028,"byte_end":13856036,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856037,"byte_end":13856044,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856045,"byte_end":13856119,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856120,"byte_end":13856123,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856124,"byte_end":13856146,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856147,"byte_end":13856150,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856151,"byte_end":13856228,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856229,"byte_end":13856305,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856306,"byte_end":13856385,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856386,"byte_end":13856440,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856441,"byte_end":13856444,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856445,"byte_end":13856489,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856490,"byte_end":13856497,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856498,"byte_end":13856533,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856534,"byte_end":13856565,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856566,"byte_end":13856569,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856570,"byte_end":13856599,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856600,"byte_end":13856603,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856604,"byte_end":13856643,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856644,"byte_end":13856647,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856648,"byte_end":13856686,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856687,"byte_end":13856714,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856715,"byte_end":13856751,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856752,"byte_end":13856755,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856756,"byte_end":13856774,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856775,"byte_end":13856797,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856798,"byte_end":13856828,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856829,"byte_end":13856883,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856884,"byte_end":13856914,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856915,"byte_end":13856972,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13856973,"byte_end":13857005,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857006,"byte_end":13857019,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857020,"byte_end":13857023,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857024,"byte_end":13857058,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857059,"byte_end":13857103,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857104,"byte_end":13857156,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857157,"byte_end":13857224,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857225,"byte_end":13857228,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857229,"byte_end":13857303,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857304,"byte_end":13857370,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857371,"byte_end":13857400,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857401,"byte_end":13857448,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857449,"byte_end":13857501,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857502,"byte_end":13857573,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857574,"byte_end":13857593,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857594,"byte_end":13857607,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857608,"byte_end":13857611,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857612,"byte_end":13857651,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857652,"byte_end":13857707,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857708,"byte_end":13857726,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857727,"byte_end":13857803,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857804,"byte_end":13857870,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857871,"byte_end":13857923,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857924,"byte_end":13857927,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13857928,"byte_end":13858008,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858009,"byte_end":13858034,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858035,"byte_end":13858067,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858068,"byte_end":13858081,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858082,"byte_end":13858085,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858086,"byte_end":13858158,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858159,"byte_end":13858185,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858186,"byte_end":13858237,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858238,"byte_end":13858274,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858275,"byte_end":13858278,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858279,"byte_end":13858357,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858358,"byte_end":13858401,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858402,"byte_end":13858449,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858450,"byte_end":13858486,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858487,"byte_end":13858531,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858532,"byte_end":13858588,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858589,"byte_end":13858637,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858638,"byte_end":13858660,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858661,"byte_end":13858679,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858680,"byte_end":13858693,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858694,"byte_end":13858703,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858704,"byte_end":13858709,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858710,"byte_end":13858717,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858718,"byte_end":13858721,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858722,"byte_end":13858745,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858746,"byte_end":13858749,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858750,"byte_end":13858828,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858829,"byte_end":13858902,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858903,"byte_end":13858979,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13858980,"byte_end":13859060,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859061,"byte_end":13859077,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859078,"byte_end":13859081,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859082,"byte_end":13859162,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859163,"byte_end":13859242,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859243,"byte_end":13859323,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859324,"byte_end":13859396,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859397,"byte_end":13859400,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859401,"byte_end":13859478,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859479,"byte_end":13859557,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859558,"byte_end":13859631,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859632,"byte_end":13859698,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859699,"byte_end":13859702,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859703,"byte_end":13859716,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859717,"byte_end":13859750,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859751,"byte_end":13859785,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859786,"byte_end":13859823,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859824,"byte_end":13859891,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859892,"byte_end":13859927,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859928,"byte_end":13859989,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13859990,"byte_end":13860036,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860037,"byte_end":13860098,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860099,"byte_end":13860102,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860103,"byte_end":13860131,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860132,"byte_end":13860135,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860136,"byte_end":13860177,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860178,"byte_end":13860188,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860189,"byte_end":13860213,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860214,"byte_end":13860288,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860289,"byte_end":13860331,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860332,"byte_end":13860346,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860347,"byte_end":13860404,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860405,"byte_end":13860454,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860455,"byte_end":13860469,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860470,"byte_end":13860507,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860508,"byte_end":13860559,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860560,"byte_end":13860606,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860607,"byte_end":13860637,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860638,"byte_end":13860652,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860653,"byte_end":13860662,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860663,"byte_end":13860668,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860669,"byte_end":13860676,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860677,"byte_end":13860684,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860685,"byte_end":13860760,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860761,"byte_end":13860834,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860835,"byte_end":13860877,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860878,"byte_end":13860881,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860882,"byte_end":13860904,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860905,"byte_end":13860908,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860909,"byte_end":13860986,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13860987,"byte_end":13861063,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861064,"byte_end":13861140,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861141,"byte_end":13861164,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861165,"byte_end":13861168,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861169,"byte_end":13861214,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861215,"byte_end":13861222,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861223,"byte_end":13861258,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861259,"byte_end":13861283,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861284,"byte_end":13861287,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861288,"byte_end":13861317,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861318,"byte_end":13861321,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861322,"byte_end":13861361,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861362,"byte_end":13861365,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861366,"byte_end":13861412,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861413,"byte_end":13861449,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861450,"byte_end":13861453,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861454,"byte_end":13861545,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861546,"byte_end":13861620,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861621,"byte_end":13861643,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861644,"byte_end":13861677,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861678,"byte_end":13861725,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861726,"byte_end":13861778,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861779,"byte_end":13861854,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861855,"byte_end":13861874,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861875,"byte_end":13861888,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861889,"byte_end":13861892,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861893,"byte_end":13861945,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13861946,"byte_end":13862023,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862024,"byte_end":13862088,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862089,"byte_end":13862092,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862093,"byte_end":13862136,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862137,"byte_end":13862177,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862178,"byte_end":13862181,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862182,"byte_end":13862239,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862240,"byte_end":13862286,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862287,"byte_end":13862338,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862339,"byte_end":13862357,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862358,"byte_end":13862367,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862368,"byte_end":13862373,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862374,"byte_end":13862381,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862382,"byte_end":13862385,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862386,"byte_end":13862425,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862426,"byte_end":13862467,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862468,"byte_end":13862504,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862505,"byte_end":13862537,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862538,"byte_end":13862634,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862635,"byte_end":13862686,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862687,"byte_end":13862740,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862741,"byte_end":13862784,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862785,"byte_end":13862829,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862830,"byte_end":13862878,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862879,"byte_end":13862927,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862928,"byte_end":13862974,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13862975,"byte_end":13863014,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13865038,"byte_end":13865048,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13863881,"byte_end":13863966,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13863967,"byte_end":13863970,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13863971,"byte_end":13864009,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864010,"byte_end":13864048,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864049,"byte_end":13864052,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864053,"byte_end":13864066,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864067,"byte_end":13864070,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864071,"byte_end":13864152,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864153,"byte_end":13864156,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864157,"byte_end":13864196,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864197,"byte_end":13864230,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864231,"byte_end":13864260,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864261,"byte_end":13864264,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864265,"byte_end":13864272,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864273,"byte_end":13864291,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864292,"byte_end":13864322,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864323,"byte_end":13864347,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864348,"byte_end":13864355,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864356,"byte_end":13864385,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864386,"byte_end":13864438,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864439,"byte_end":13864442,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864443,"byte_end":13864461,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864462,"byte_end":13864479,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864480,"byte_end":13864560,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864561,"byte_end":13864595,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864596,"byte_end":13864649,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864650,"byte_end":13864661,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864662,"byte_end":13864669,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864670,"byte_end":13864675,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864676,"byte_end":13864723,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864724,"byte_end":13864777,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864778,"byte_end":13864836,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864837,"byte_end":13864916,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864917,"byte_end":13864929,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864930,"byte_end":13864937,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864938,"byte_end":13864945,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13864946,"byte_end":13864949,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13865150,"byte_end":13865153,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13865077,"byte_end":13865138,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867153,"byte_end":13867160,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13865868,"byte_end":13865903,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13865904,"byte_end":13865907,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13865908,"byte_end":13865977,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13865978,"byte_end":13866057,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866058,"byte_end":13866130,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866131,"byte_end":13866155,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866156,"byte_end":13866159,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866160,"byte_end":13866228,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866229,"byte_end":13866306,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866307,"byte_end":13866368,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866369,"byte_end":13866372,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866373,"byte_end":13866434,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866435,"byte_end":13866497,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866498,"byte_end":13866501,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866502,"byte_end":13866565,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866566,"byte_end":13866629,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866630,"byte_end":13866709,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866710,"byte_end":13866784,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866785,"byte_end":13866804,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866805,"byte_end":13866808,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866809,"byte_end":13866877,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866878,"byte_end":13866940,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13866941,"byte_end":13867016,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ reseting the entire internal state.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867017,"byte_end":13867056,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867057,"byte_end":13867060,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867061,"byte_end":13867097,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867098,"byte_end":13867142,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867208,"byte_end":13867212,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867167,"byte_end":13867198,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867978,"byte_end":13867983,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867219,"byte_end":13867271,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867276,"byte_end":13867279,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867284,"byte_end":13867353,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867358,"byte_end":13867428,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867433,"byte_end":13867479,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867484,"byte_end":13867487,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867492,"byte_end":13867568,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867573,"byte_end":13867648,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867653,"byte_end":13867728,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867733,"byte_end":13867773,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867778,"byte_end":13867781,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867786,"byte_end":13867860,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867865,"byte_end":13867911,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867916,"byte_end":13867919,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13867924,"byte_end":13867968,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870919,"byte_end":13870925,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868007,"byte_end":13868072,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868077,"byte_end":13868080,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868085,"byte_end":13868159,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868164,"byte_end":13868236,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868241,"byte_end":13868314,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868319,"byte_end":13868362,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868367,"byte_end":13868370,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868375,"byte_end":13868448,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868453,"byte_end":13868516,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868521,"byte_end":13868596,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868601,"byte_end":13868676,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868681,"byte_end":13868704,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868709,"byte_end":13868712,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868717,"byte_end":13868789,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868794,"byte_end":13868868,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868873,"byte_end":13868943,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868948,"byte_end":13868951,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13868956,"byte_end":13869024,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869029,"byte_end":13869100,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869105,"byte_end":13869185,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869190,"byte_end":13869202,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869207,"byte_end":13869210,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869215,"byte_end":13869285,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869290,"byte_end":13869365,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869370,"byte_end":13869407,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869412,"byte_end":13869415,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869420,"byte_end":13869456,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869461,"byte_end":13869505,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869510,"byte_end":13869513,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869518,"byte_end":13869541,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869546,"byte_end":13869549,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869554,"byte_end":13869628,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869633,"byte_end":13869707,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869712,"byte_end":13869765,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869770,"byte_end":13869773,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869778,"byte_end":13869849,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869854,"byte_end":13869924,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869929,"byte_end":13869945,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869950,"byte_end":13869953,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869958,"byte_end":13869971,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869976,"byte_end":13869994,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13869999,"byte_end":13870004,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870009,"byte_end":13870035,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870040,"byte_end":13870077,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870082,"byte_end":13870087,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870092,"byte_end":13870113,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870118,"byte_end":13870123,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870128,"byte_end":13870158,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870163,"byte_end":13870177,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870182,"byte_end":13870213,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870218,"byte_end":13870251,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870256,"byte_end":13870259,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870264,"byte_end":13870357,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870362,"byte_end":13870380,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870385,"byte_end":13870388,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870393,"byte_end":13870465,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870470,"byte_end":13870530,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870535,"byte_end":13870587,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870592,"byte_end":13870654,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870659,"byte_end":13870726,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870731,"byte_end":13870734,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870739,"byte_end":13870767,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870772,"byte_end":13870781,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870786,"byte_end":13870791,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870796,"byte_end":13870803,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870808,"byte_end":13870811,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870816,"byte_end":13870885,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13870890,"byte_end":13870911,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13872091,"byte_end":13872101,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871006,"byte_end":13871078,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871083,"byte_end":13871132,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871137,"byte_end":13871140,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871145,"byte_end":13871213,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871218,"byte_end":13871285,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871290,"byte_end":13871358,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871363,"byte_end":13871439,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871444,"byte_end":13871510,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871515,"byte_end":13871518,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871523,"byte_end":13871591,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871596,"byte_end":13871671,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871676,"byte_end":13871751,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871756,"byte_end":13871828,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871833,"byte_end":13871875,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871880,"byte_end":13871883,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871888,"byte_end":13871963,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13871968,"byte_end":13872046,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13872051,"byte_end":13872083,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873709,"byte_end":13873715,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13872519,"byte_end":13872599,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13872604,"byte_end":13872680,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13872685,"byte_end":13872688,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13872693,"byte_end":13872768,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13872773,"byte_end":13872843,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13872848,"byte_end":13872919,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13872924,"byte_end":13872996,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873001,"byte_end":13873059,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873064,"byte_end":13873067,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873072,"byte_end":13873141,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873146,"byte_end":13873221,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873226,"byte_end":13873302,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873307,"byte_end":13873329,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873334,"byte_end":13873337,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873342,"byte_end":13873415,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873420,"byte_end":13873493,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873498,"byte_end":13873574,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873579,"byte_end":13873582,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873587,"byte_end":13873623,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873628,"byte_end":13873660,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":13873665,"byte_end":13873701,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874049,"byte_end":13874056,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13873894,"byte_end":13873966,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13873967,"byte_end":13873987,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13873988,"byte_end":13873991,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13873992,"byte_end":13874038,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874321,"byte_end":13874326,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874069,"byte_end":13874101,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874106,"byte_end":13874109,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874114,"byte_end":13874191,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874196,"byte_end":13874252,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874257,"byte_end":13874260,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874265,"byte_end":13874311,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874677,"byte_end":13874683,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874350,"byte_end":13874395,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874400,"byte_end":13874403,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874408,"byte_end":13874482,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874487,"byte_end":13874567,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874572,"byte_end":13874610,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874615,"byte_end":13874618,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":13874623,"byte_end":13874669,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13885500,"byte_end":13885506,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1731}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887279,"byte_end":13887282,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13885648,"byte_end":13885728,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13885733,"byte_end":13885814,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13885819,"byte_end":13885822,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13885827,"byte_end":13885902,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13885907,"byte_end":13885977,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13885982,"byte_end":13886051,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886056,"byte_end":13886128,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886133,"byte_end":13886191,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886196,"byte_end":13886199,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886204,"byte_end":13886275,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886280,"byte_end":13886357,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886362,"byte_end":13886438,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886443,"byte_end":13886465,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886470,"byte_end":13886473,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886478,"byte_end":13886551,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886556,"byte_end":13886629,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886634,"byte_end":13886710,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886715,"byte_end":13886718,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886723,"byte_end":13886799,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886804,"byte_end":13886880,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886885,"byte_end":13886960,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13886965,"byte_end":13887000,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887005,"byte_end":13887008,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887013,"byte_end":13887049,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887054,"byte_end":13887086,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887091,"byte_end":13887128,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887133,"byte_end":13887171,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887176,"byte_end":13887267,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888890,"byte_end":13888903,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887495,"byte_end":13887575,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887580,"byte_end":13887661,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887666,"byte_end":13887715,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887720,"byte_end":13887723,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887728,"byte_end":13887803,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887808,"byte_end":13887878,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887883,"byte_end":13887952,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13887957,"byte_end":13888029,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888034,"byte_end":13888092,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888097,"byte_end":13888100,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888105,"byte_end":13888176,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888181,"byte_end":13888258,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888263,"byte_end":13888339,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888344,"byte_end":13888366,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888371,"byte_end":13888374,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888379,"byte_end":13888452,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888457,"byte_end":13888530,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888535,"byte_end":13888611,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888616,"byte_end":13888619,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888624,"byte_end":13888660,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888665,"byte_end":13888697,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888702,"byte_end":13888739,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888744,"byte_end":13888782,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13888787,"byte_end":13888878,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891006,"byte_end":13891016,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889429,"byte_end":13889509,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889514,"byte_end":13889595,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889600,"byte_end":13889603,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889608,"byte_end":13889683,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889688,"byte_end":13889758,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889763,"byte_end":13889834,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889839,"byte_end":13889911,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889916,"byte_end":13889974,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889979,"byte_end":13889982,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889987,"byte_end":13890058,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890063,"byte_end":13890140,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890145,"byte_end":13890221,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890226,"byte_end":13890248,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890253,"byte_end":13890256,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890261,"byte_end":13890340,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890345,"byte_end":13890422,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890427,"byte_end":13890430,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890435,"byte_end":13890508,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890513,"byte_end":13890586,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890591,"byte_end":13890667,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890672,"byte_end":13890675,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890680,"byte_end":13890716,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890721,"byte_end":13890753,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890758,"byte_end":13890796,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890801,"byte_end":13890839,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890844,"byte_end":13890898,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13890903,"byte_end":13890994,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891651,"byte_end":13891658,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891368,"byte_end":13891431,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891436,"byte_end":13891449,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891454,"byte_end":13891457,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891462,"byte_end":13891537,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891542,"byte_end":13891612,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891617,"byte_end":13891639,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892002,"byte_end":13892009,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891711,"byte_end":13891782,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891787,"byte_end":13891800,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891805,"byte_end":13891808,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891813,"byte_end":13891888,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891893,"byte_end":13891963,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13891968,"byte_end":13891990,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892372,"byte_end":13892383,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892074,"byte_end":13892152,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892157,"byte_end":13892170,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892175,"byte_end":13892178,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892183,"byte_end":13892258,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892263,"byte_end":13892333,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892338,"byte_end":13892360,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892730,"byte_end":13892735,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892479,"byte_end":13892537,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892542,"byte_end":13892555,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892560,"byte_end":13892563,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892568,"byte_end":13892642,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892647,"byte_end":13892718,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893047,"byte_end":13893056,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892788,"byte_end":13892854,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892859,"byte_end":13892872,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892877,"byte_end":13892880,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892885,"byte_end":13892959,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13892964,"byte_end":13893035,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893176,"byte_end":13893187,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893121,"byte_end":13893164,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893322,"byte_end":13893337,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893259,"byte_end":13893310,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893477,"byte_end":13893489,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893421,"byte_end":13893465,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893626,"byte_end":13893642,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893562,"byte_end":13893614,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893992,"byte_end":13894002,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893727,"byte_end":13893790,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893795,"byte_end":13893798,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893803,"byte_end":13893878,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893883,"byte_end":13893953,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13893958,"byte_end":13893980,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13894374,"byte_end":13894384,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13894052,"byte_end":13894126,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13894131,"byte_end":13894172,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13894177,"byte_end":13894180,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13894185,"byte_end":13894260,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13894265,"byte_end":13894335,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13894340,"byte_end":13894362,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896358,"byte_end":13896369,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896043,"byte_end":13896114,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896115,"byte_end":13896187,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896188,"byte_end":13896248,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896249,"byte_end":13896252,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896253,"byte_end":13896289,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896307,"byte_end":13896346,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896455,"byte_end":13896457,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896382,"byte_end":13896446,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896489,"byte_end":13896494,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896467,"byte_end":13896480,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896559,"byte_end":13896567,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896504,"byte_end":13896550,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896654,"byte_end":13896663,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1206},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896584,"byte_end":13896645,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896896,"byte_end":13896899,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896844,"byte_end":13896884,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13897628,"byte_end":13897638,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1690}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13897889,"byte_end":13897892,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13897821,"byte_end":13897877,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898240,"byte_end":13898253,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898124,"byte_end":13898206,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898211,"byte_end":13898228,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898967,"byte_end":13898974,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898680,"byte_end":13898743,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898748,"byte_end":13898765,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898770,"byte_end":13898773,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898778,"byte_end":13898853,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898858,"byte_end":13898928,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898933,"byte_end":13898955,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899322,"byte_end":13899329,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899027,"byte_end":13899098,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899103,"byte_end":13899120,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899125,"byte_end":13899128,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899133,"byte_end":13899208,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899213,"byte_end":13899283,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899288,"byte_end":13899310,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899696,"byte_end":13899707,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899394,"byte_end":13899472,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899477,"byte_end":13899494,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899499,"byte_end":13899502,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899507,"byte_end":13899582,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899587,"byte_end":13899657,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899662,"byte_end":13899684,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900072,"byte_end":13900082,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899803,"byte_end":13899870,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899875,"byte_end":13899878,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899883,"byte_end":13899958,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13899963,"byte_end":13900033,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900038,"byte_end":13900060,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900194,"byte_end":13900201,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900132,"byte_end":13900182,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900324,"byte_end":13900335,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900254,"byte_end":13900312,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900455,"byte_end":13900466,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900400,"byte_end":13900443,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900596,"byte_end":13900611,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900533,"byte_end":13900584,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13902712,"byte_end":13902723,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1649}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13902930,"byte_end":13902933,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13902861,"byte_end":13902918,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903491,"byte_end":13903498,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903203,"byte_end":13903266,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903271,"byte_end":13903289,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903294,"byte_end":13903297,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903302,"byte_end":13903377,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903382,"byte_end":13903452,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903457,"byte_end":13903479,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903847,"byte_end":13903854,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903551,"byte_end":13903622,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903627,"byte_end":13903645,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903650,"byte_end":13903653,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903658,"byte_end":13903733,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903738,"byte_end":13903808,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903813,"byte_end":13903835,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904222,"byte_end":13904233,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903919,"byte_end":13903997,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904002,"byte_end":13904020,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904025,"byte_end":13904028,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904033,"byte_end":13904108,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904113,"byte_end":13904183,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904188,"byte_end":13904210,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904599,"byte_end":13904609,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904329,"byte_end":13904397,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904402,"byte_end":13904405,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904410,"byte_end":13904485,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904490,"byte_end":13904560,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904565,"byte_end":13904587,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904721,"byte_end":13904728,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904659,"byte_end":13904709,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904851,"byte_end":13904862,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904781,"byte_end":13904839,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904983,"byte_end":13904995,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13904927,"byte_end":13904971,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13905126,"byte_end":13905142,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13905062,"byte_end":13905114,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":1218},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":994},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":996},{"krate":0,"index":1003},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13906669,"byte_end":13906721,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13906722,"byte_end":13906725,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13906726,"byte_end":13906796,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13906797,"byte_end":13906855,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13906856,"byte_end":13906928,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13906929,"byte_end":13906999,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907000,"byte_end":13907067,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907068,"byte_end":13907071,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907072,"byte_end":13907093,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907094,"byte_end":13907097,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907098,"byte_end":13907173,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907174,"byte_end":13907245,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907246,"byte_end":13907317,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907318,"byte_end":13907388,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907389,"byte_end":13907429,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907430,"byte_end":13907433,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907434,"byte_end":13907441,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907442,"byte_end":13907485,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907486,"byte_end":13907544,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907545,"byte_end":13907548,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907549,"byte_end":13907604,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907605,"byte_end":13907647,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907648,"byte_end":13907653,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907654,"byte_end":13907706,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907707,"byte_end":13907712,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907713,"byte_end":13907735,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907736,"byte_end":13907743,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907744,"byte_end":13907747,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907748,"byte_end":13907820,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907821,"byte_end":13907892,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907893,"byte_end":13907912,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907913,"byte_end":13907916,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907917,"byte_end":13907928,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907929,"byte_end":13907978,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13907979,"byte_end":13908028,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908029,"byte_end":13908078,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908079,"byte_end":13908086,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908087,"byte_end":13908090,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908091,"byte_end":13908129,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908130,"byte_end":13908133,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908134,"byte_end":13908141,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908142,"byte_end":13908185,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908186,"byte_end":13908244,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908245,"byte_end":13908248,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908249,"byte_end":13908274,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908275,"byte_end":13908296,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908297,"byte_end":13908300,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908301,"byte_end":13908377,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908378,"byte_end":13908387,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908388,"byte_end":13908430,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908431,"byte_end":13908436,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908437,"byte_end":13908510,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908511,"byte_end":13908558,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908559,"byte_end":13908562,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908563,"byte_end":13908600,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908601,"byte_end":13908615,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908616,"byte_end":13908621,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908622,"byte_end":13908629,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908630,"byte_end":13908633,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908634,"byte_end":13908676,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908677,"byte_end":13908680,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908681,"byte_end":13908692,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908693,"byte_end":13908732,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908733,"byte_end":13908772,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908773,"byte_end":13908812,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908813,"byte_end":13908820,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908821,"byte_end":13908824,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908825,"byte_end":13908839,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908840,"byte_end":13908843,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908844,"byte_end":13908919,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908920,"byte_end":13908993,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13908994,"byte_end":13909060,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909061,"byte_end":13909130,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909131,"byte_end":13909196,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909197,"byte_end":13909200,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909201,"byte_end":13909217,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909218,"byte_end":13909221,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909222,"byte_end":13909298,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909299,"byte_end":13909340,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909341,"byte_end":13909344,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909345,"byte_end":13909352,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909353,"byte_end":13909384,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909385,"byte_end":13909435,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909436,"byte_end":13909477,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909478,"byte_end":13909513,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909514,"byte_end":13909562,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909563,"byte_end":13909594,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909595,"byte_end":13909643,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909644,"byte_end":13909693,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909694,"byte_end":13909716,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909717,"byte_end":13909724,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909725,"byte_end":13909747,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909748,"byte_end":13909755,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909756,"byte_end":13909759,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909760,"byte_end":13909808,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909809,"byte_end":13909812,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909813,"byte_end":13909824,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909825,"byte_end":13909877,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909878,"byte_end":13909943,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13909944,"byte_end":13910009,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910010,"byte_end":13910075,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910076,"byte_end":13910083,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910084,"byte_end":13910087,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910088,"byte_end":13910164,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910165,"byte_end":13910239,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910240,"byte_end":13910312,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910313,"byte_end":13910389,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910390,"byte_end":13910432,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910433,"byte_end":13910436,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910437,"byte_end":13910453,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910454,"byte_end":13910457,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910458,"byte_end":13910533,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910534,"byte_end":13910575,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910576,"byte_end":13910579,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910580,"byte_end":13910587,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910588,"byte_end":13910619,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910620,"byte_end":13910670,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910671,"byte_end":13910712,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910713,"byte_end":13910748,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910749,"byte_end":13910797,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910798,"byte_end":13910829,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910830,"byte_end":13910878,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910879,"byte_end":13910938,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910939,"byte_end":13910961,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910962,"byte_end":13910969,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910970,"byte_end":13910992,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13910993,"byte_end":13911000,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911001,"byte_end":13911004,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911005,"byte_end":13911053,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911054,"byte_end":13911057,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911058,"byte_end":13911069,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911070,"byte_end":13911119,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911120,"byte_end":13911174,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911175,"byte_end":13911229,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911230,"byte_end":13911284,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911285,"byte_end":13911292,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911293,"byte_end":13911296,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911297,"byte_end":13911370,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911371,"byte_end":13911438,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911439,"byte_end":13911442,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911443,"byte_end":13911459,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911460,"byte_end":13911463,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911464,"byte_end":13911540,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911541,"byte_end":13911613,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911614,"byte_end":13911653,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911654,"byte_end":13911657,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911658,"byte_end":13911665,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911666,"byte_end":13911697,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911698,"byte_end":13911748,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911749,"byte_end":13911790,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911791,"byte_end":13911826,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911827,"byte_end":13911875,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911876,"byte_end":13911907,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911908,"byte_end":13911955,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911956,"byte_end":13911976,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13911977,"byte_end":13911999,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912000,"byte_end":13912007,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912008,"byte_end":13912030,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912031,"byte_end":13912038,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912039,"byte_end":13912042,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912043,"byte_end":13912091,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912092,"byte_end":13912095,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912096,"byte_end":13912107,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912108,"byte_end":13912160,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912161,"byte_end":13912226,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912227,"byte_end":13912292,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912293,"byte_end":13912358,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912359,"byte_end":13912366,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912367,"byte_end":13912370,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912371,"byte_end":13912443,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912444,"byte_end":13912519,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912520,"byte_end":13912592,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912593,"byte_end":13912669,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912670,"byte_end":13912743,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912744,"byte_end":13912747,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912748,"byte_end":13912764,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912765,"byte_end":13912768,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912769,"byte_end":13912843,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912844,"byte_end":13912911,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912912,"byte_end":13912915,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912916,"byte_end":13912923,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912924,"byte_end":13912955,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13912956,"byte_end":13913006,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913007,"byte_end":13913048,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913049,"byte_end":13913084,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913085,"byte_end":13913133,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913134,"byte_end":13913165,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913166,"byte_end":13913214,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913215,"byte_end":13913235,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913236,"byte_end":13913258,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913259,"byte_end":13913266,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913267,"byte_end":13913289,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913290,"byte_end":13913297,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913298,"byte_end":13913301,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913302,"byte_end":13913350,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913351,"byte_end":13913354,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913355,"byte_end":13913366,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913367,"byte_end":13913393,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913394,"byte_end":13913439,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913440,"byte_end":13913485,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913486,"byte_end":13913531,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913532,"byte_end":13913535,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913536,"byte_end":13913564,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913565,"byte_end":13913610,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913611,"byte_end":13913656,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913657,"byte_end":13913702,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913703,"byte_end":13913710,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913711,"byte_end":13913714,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913715,"byte_end":13913787,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913788,"byte_end":13913864,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913865,"byte_end":13913935,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13913936,"byte_end":13914005,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914006,"byte_end":13914043,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914044,"byte_end":13914047,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914048,"byte_end":13914122,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914123,"byte_end":13914177,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914178,"byte_end":13914181,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914182,"byte_end":13914198,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914199,"byte_end":13914202,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914203,"byte_end":13914276,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914277,"byte_end":13914353,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914354,"byte_end":13914428,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914429,"byte_end":13914442,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914443,"byte_end":13914446,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914447,"byte_end":13914454,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914455,"byte_end":13914486,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914487,"byte_end":13914537,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914538,"byte_end":13914579,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914580,"byte_end":13914615,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914616,"byte_end":13914665,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914666,"byte_end":13914697,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914698,"byte_end":13914746,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914747,"byte_end":13914791,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914792,"byte_end":13914814,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914815,"byte_end":13914822,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914823,"byte_end":13914845,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914846,"byte_end":13914853,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914854,"byte_end":13914857,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914858,"byte_end":13914906,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914907,"byte_end":13914910,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914911,"byte_end":13914922,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914923,"byte_end":13914949,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13914950,"byte_end":13915000,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915001,"byte_end":13915051,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915052,"byte_end":13915102,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915103,"byte_end":13915106,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915107,"byte_end":13915127,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915128,"byte_end":13915158,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915159,"byte_end":13915189,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915190,"byte_end":13915220,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915221,"byte_end":13915228,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915229,"byte_end":13915232,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915233,"byte_end":13915306,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915307,"byte_end":13915382,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915383,"byte_end":13915455,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915456,"byte_end":13915494,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915495,"byte_end":13915498,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915499,"byte_end":13915573,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915574,"byte_end":13915650,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915651,"byte_end":13915724,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915725,"byte_end":13915753,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915754,"byte_end":13915757,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915758,"byte_end":13915774,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915775,"byte_end":13915778,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915779,"byte_end":13915852,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915853,"byte_end":13915929,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13915930,"byte_end":13916004,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916005,"byte_end":13916077,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916078,"byte_end":13916089,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916090,"byte_end":13916093,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916094,"byte_end":13916101,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916102,"byte_end":13916133,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916134,"byte_end":13916184,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916185,"byte_end":13916226,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916227,"byte_end":13916262,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916263,"byte_end":13916312,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916313,"byte_end":13916344,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916345,"byte_end":13916410,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916411,"byte_end":13916431,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916432,"byte_end":13916454,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916455,"byte_end":13916462,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916463,"byte_end":13916470,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916471,"byte_end":13916474,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916475,"byte_end":13916523,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916524,"byte_end":13916527,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916528,"byte_end":13916539,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916540,"byte_end":13916566,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916567,"byte_end":13916617,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916618,"byte_end":13916668,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916669,"byte_end":13916719,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916720,"byte_end":13916723,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916724,"byte_end":13916744,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916745,"byte_end":13916775,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916776,"byte_end":13916806,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916807,"byte_end":13916837,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916838,"byte_end":13916845,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916846,"byte_end":13916849,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916850,"byte_end":13916923,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916924,"byte_end":13916998,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13916999,"byte_end":13917073,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917074,"byte_end":13917147,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917148,"byte_end":13917224,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917225,"byte_end":13917258,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917259,"byte_end":13917262,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917263,"byte_end":13917279,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917280,"byte_end":13917283,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917284,"byte_end":13917358,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917359,"byte_end":13917426,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917427,"byte_end":13917430,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917431,"byte_end":13917438,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917439,"byte_end":13917470,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917471,"byte_end":13917521,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917522,"byte_end":13917563,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917564,"byte_end":13917599,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917600,"byte_end":13917648,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917649,"byte_end":13917680,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917681,"byte_end":13917728,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917729,"byte_end":13917775,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917776,"byte_end":13917798,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917799,"byte_end":13917806,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917807,"byte_end":13917829,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917830,"byte_end":13917837,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917838,"byte_end":13917841,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917842,"byte_end":13917890,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917891,"byte_end":13917894,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917895,"byte_end":13917906,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917907,"byte_end":13917963,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13917964,"byte_end":13918025,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918026,"byte_end":13918087,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918088,"byte_end":13918149,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918150,"byte_end":13918157,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918158,"byte_end":13918161,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918162,"byte_end":13918236,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918237,"byte_end":13918257,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918258,"byte_end":13918261,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918262,"byte_end":13918276,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918277,"byte_end":13918280,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918281,"byte_end":13918356,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918357,"byte_end":13918429,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918430,"byte_end":13918498,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918499,"byte_end":13918575,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918576,"byte_end":13918617,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918618,"byte_end":13918621,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918622,"byte_end":13918692,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918693,"byte_end":13918711,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918712,"byte_end":13918715,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918716,"byte_end":13918723,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918724,"byte_end":13918756,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918757,"byte_end":13918807,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918808,"byte_end":13918852,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918853,"byte_end":13918866,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918867,"byte_end":13918902,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918903,"byte_end":13918934,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918935,"byte_end":13918958,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918959,"byte_end":13918966,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918967,"byte_end":13918989,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918990,"byte_end":13918997,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13918998,"byte_end":13919001,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919002,"byte_end":13919052,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919053,"byte_end":13919056,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919057,"byte_end":13919068,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919069,"byte_end":13919102,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919103,"byte_end":13919136,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919137,"byte_end":13919170,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919171,"byte_end":13919178,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919179,"byte_end":13919182,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919183,"byte_end":13919252,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919253,"byte_end":13919290,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919291,"byte_end":13919330,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919331,"byte_end":13919376,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919377,"byte_end":13919424,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919425,"byte_end":13919455,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919456,"byte_end":13919489,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13920051,"byte_end":13920058,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919733,"byte_end":13919788,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919789,"byte_end":13919792,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919793,"byte_end":13919868,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919869,"byte_end":13919949,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13919950,"byte_end":13920009,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13920729,"byte_end":13920754,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":995}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13920644,"byte_end":13920717,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921099,"byte_end":13921119,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13920775,"byte_end":13920849,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13920850,"byte_end":13920853,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13920854,"byte_end":13920933,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13920934,"byte_end":13920977,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13920978,"byte_end":13920981,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13920982,"byte_end":13921035,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921036,"byte_end":13921039,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921040,"byte_end":13921070,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921463,"byte_end":13921466,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921372,"byte_end":13921451,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921693,"byte_end":13921700,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921590,"byte_end":13921665,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921670,"byte_end":13921681,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921922,"byte_end":13921938,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921750,"byte_end":13921791,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921796,"byte_end":13921799,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921804,"byte_end":13921877,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921882,"byte_end":13921910,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13922359,"byte_end":13922379,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13922003,"byte_end":13922037,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13922042,"byte_end":13922045,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13922050,"byte_end":13922120,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13922125,"byte_end":13922200,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13922205,"byte_end":13922277,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13922282,"byte_end":13922347,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927634,"byte_end":13927637,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927092,"byte_end":13927167,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927172,"byte_end":13927183,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927188,"byte_end":13927191,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927196,"byte_end":13927210,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927215,"byte_end":13927218,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927223,"byte_end":13927230,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927235,"byte_end":13927266,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927271,"byte_end":13927319,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927324,"byte_end":13927327,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927332,"byte_end":13927373,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927378,"byte_end":13927413,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927418,"byte_end":13927449,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927454,"byte_end":13927485,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927490,"byte_end":13927519,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927524,"byte_end":13927544,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927549,"byte_end":13927571,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927576,"byte_end":13927583,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927588,"byte_end":13927610,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927615,"byte_end":13927622,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928822,"byte_end":13928832,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928301,"byte_end":13928350,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928355,"byte_end":13928358,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928363,"byte_end":13928395,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928400,"byte_end":13928403,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928408,"byte_end":13928476,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928481,"byte_end":13928484,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928489,"byte_end":13928503,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928508,"byte_end":13928511,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928516,"byte_end":13928523,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928528,"byte_end":13928559,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928564,"byte_end":13928612,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928617,"byte_end":13928620,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928625,"byte_end":13928666,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928671,"byte_end":13928706,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928711,"byte_end":13928732,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928737,"byte_end":13928759,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928764,"byte_end":13928771,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928776,"byte_end":13928798,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928803,"byte_end":13928810,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929464,"byte_end":13929477,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928931,"byte_end":13928983,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928988,"byte_end":13928991,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13928996,"byte_end":13929034,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929039,"byte_end":13929042,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929047,"byte_end":13929115,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929120,"byte_end":13929123,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929128,"byte_end":13929142,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929147,"byte_end":13929150,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929155,"byte_end":13929162,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929167,"byte_end":13929198,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929203,"byte_end":13929251,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929256,"byte_end":13929259,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929264,"byte_end":13929305,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929310,"byte_end":13929345,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929350,"byte_end":13929374,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929379,"byte_end":13929401,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929406,"byte_end":13929413,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929418,"byte_end":13929440,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929445,"byte_end":13929452,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930110,"byte_end":13930123,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929577,"byte_end":13929629,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929634,"byte_end":13929637,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929642,"byte_end":13929680,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929685,"byte_end":13929688,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929693,"byte_end":13929761,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929766,"byte_end":13929769,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929774,"byte_end":13929788,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929793,"byte_end":13929796,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929801,"byte_end":13929808,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929813,"byte_end":13929844,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929849,"byte_end":13929897,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929902,"byte_end":13929905,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929910,"byte_end":13929951,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929956,"byte_end":13929991,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13929996,"byte_end":13930020,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930025,"byte_end":13930047,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930052,"byte_end":13930059,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930064,"byte_end":13930086,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930091,"byte_end":13930098,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931204,"byte_end":13931220,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930292,"byte_end":13930321,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930326,"byte_end":13930329,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930334,"byte_end":13930406,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930411,"byte_end":13930436,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930441,"byte_end":13930444,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930449,"byte_end":13930521,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930526,"byte_end":13930595,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930600,"byte_end":13930673,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930678,"byte_end":13930690,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930695,"byte_end":13930698,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930703,"byte_end":13930778,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930783,"byte_end":13930844,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930849,"byte_end":13930852,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930857,"byte_end":13930871,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930876,"byte_end":13930879,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930884,"byte_end":13930891,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930896,"byte_end":13930927,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930932,"byte_end":13930980,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930985,"byte_end":13930988,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13930993,"byte_end":13931034,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931039,"byte_end":13931074,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931079,"byte_end":13931114,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931119,"byte_end":13931141,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931146,"byte_end":13931153,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931158,"byte_end":13931180,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931185,"byte_end":13931192,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931881,"byte_end":13931900,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931317,"byte_end":13931380,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931385,"byte_end":13931388,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931393,"byte_end":13931444,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931449,"byte_end":13931452,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931457,"byte_end":13931525,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931530,"byte_end":13931533,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931538,"byte_end":13931552,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931557,"byte_end":13931560,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931565,"byte_end":13931572,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931577,"byte_end":13931608,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931613,"byte_end":13931661,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931666,"byte_end":13931669,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931674,"byte_end":13931715,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931720,"byte_end":13931755,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931760,"byte_end":13931791,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931796,"byte_end":13931818,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931823,"byte_end":13931830,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931835,"byte_end":13931857,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13931862,"byte_end":13931869,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932559,"byte_end":13932578,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932069,"byte_end":13932135,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932140,"byte_end":13932143,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932148,"byte_end":13932203,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932208,"byte_end":13932211,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932216,"byte_end":13932230,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932235,"byte_end":13932238,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932243,"byte_end":13932250,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932255,"byte_end":13932286,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932291,"byte_end":13932339,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932344,"byte_end":13932347,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932352,"byte_end":13932393,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932398,"byte_end":13932433,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932438,"byte_end":13932469,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932474,"byte_end":13932496,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932501,"byte_end":13932508,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932513,"byte_end":13932535,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932540,"byte_end":13932547,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933132,"byte_end":13933149,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932681,"byte_end":13932754,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932759,"byte_end":13932777,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932782,"byte_end":13932785,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932790,"byte_end":13932804,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932809,"byte_end":13932812,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932817,"byte_end":13932824,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932829,"byte_end":13932860,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932865,"byte_end":13932913,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932918,"byte_end":13932921,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932926,"byte_end":13932967,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13932972,"byte_end":13933007,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933012,"byte_end":13933042,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933047,"byte_end":13933069,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933074,"byte_end":13933081,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933086,"byte_end":13933108,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933113,"byte_end":13933120,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933799,"byte_end":13933807,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933250,"byte_end":13933313,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933318,"byte_end":13933321,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933326,"byte_end":13933387,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933392,"byte_end":13933395,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933400,"byte_end":13933454,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933459,"byte_end":13933462,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933467,"byte_end":13933481,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933486,"byte_end":13933489,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933494,"byte_end":13933501,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933506,"byte_end":13933537,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933542,"byte_end":13933590,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933595,"byte_end":13933598,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933603,"byte_end":13933644,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933649,"byte_end":13933684,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933689,"byte_end":13933709,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933714,"byte_end":13933736,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933741,"byte_end":13933748,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933753,"byte_end":13933775,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933780,"byte_end":13933787,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934327,"byte_end":13934336,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933905,"byte_end":13933968,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933973,"byte_end":13933976,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13933981,"byte_end":13933995,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934000,"byte_end":13934003,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934008,"byte_end":13934015,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934020,"byte_end":13934068,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934073,"byte_end":13934094,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934099,"byte_end":13934134,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934139,"byte_end":13934170,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934175,"byte_end":13934206,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934211,"byte_end":13934240,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934245,"byte_end":13934265,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934270,"byte_end":13934291,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934296,"byte_end":13934303,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934308,"byte_end":13934315,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934992,"byte_end":13935000,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934488,"byte_end":13934541,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934546,"byte_end":13934549,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934554,"byte_end":13934568,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934573,"byte_end":13934576,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934581,"byte_end":13934588,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934593,"byte_end":13934624,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934629,"byte_end":13934677,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934682,"byte_end":13934685,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934690,"byte_end":13934731,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934736,"byte_end":13934771,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934776,"byte_end":13934807,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934812,"byte_end":13934843,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934848,"byte_end":13934877,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934882,"byte_end":13934902,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934907,"byte_end":13934929,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934934,"byte_end":13934941,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934946,"byte_end":13934968,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13934973,"byte_end":13934980,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935573,"byte_end":13935582,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935164,"byte_end":13935218,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935223,"byte_end":13935226,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935231,"byte_end":13935245,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935250,"byte_end":13935253,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935258,"byte_end":13935265,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935270,"byte_end":13935302,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935307,"byte_end":13935357,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935362,"byte_end":13935406,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935411,"byte_end":13935446,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935451,"byte_end":13935482,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935487,"byte_end":13935510,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935515,"byte_end":13935522,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935527,"byte_end":13935549,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935554,"byte_end":13935561,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936191,"byte_end":13936201,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935743,"byte_end":13935792,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935797,"byte_end":13935800,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935805,"byte_end":13935819,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935824,"byte_end":13935827,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935832,"byte_end":13935839,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935844,"byte_end":13935889,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935894,"byte_end":13935944,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13935949,"byte_end":13936005,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936010,"byte_end":13936023,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936028,"byte_end":13936063,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936068,"byte_end":13936099,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936104,"byte_end":13936128,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936133,"byte_end":13936140,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936145,"byte_end":13936167,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936172,"byte_end":13936179,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13937580,"byte_end":13937590,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13937337,"byte_end":13937424,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13937425,"byte_end":13937428,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13937429,"byte_end":13937467,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13937468,"byte_end":13937506,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938690,"byte_end":13938693,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938271,"byte_end":13938331,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938336,"byte_end":13938339,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938344,"byte_end":13938354,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938359,"byte_end":13938362,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938367,"byte_end":13938439,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938444,"byte_end":13938517,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938522,"byte_end":13938589,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938594,"byte_end":13938597,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938602,"byte_end":13938678,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939824,"byte_end":13939843,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938851,"byte_end":13938911,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938916,"byte_end":13938919,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938924,"byte_end":13938987,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938992,"byte_end":13939070,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939075,"byte_end":13939142,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939147,"byte_end":13939219,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939224,"byte_end":13939294,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939299,"byte_end":13939322,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939327,"byte_end":13939330,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939335,"byte_end":13939345,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939350,"byte_end":13939353,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939358,"byte_end":13939433,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939438,"byte_end":13939511,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939516,"byte_end":13939592,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939597,"byte_end":13939670,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939675,"byte_end":13939745,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939750,"byte_end":13939753,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939758,"byte_end":13939812,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940409,"byte_end":13940419,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13939971,"byte_end":13940021,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940026,"byte_end":13940029,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940034,"byte_end":13940041,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940046,"byte_end":13940065,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940070,"byte_end":13940108,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940113,"byte_end":13940116,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940121,"byte_end":13940155,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940160,"byte_end":13940207,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940212,"byte_end":13940219,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940224,"byte_end":13940231,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940236,"byte_end":13940274,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940279,"byte_end":13940282,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940287,"byte_end":13940340,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940345,"byte_end":13940385,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940390,"byte_end":13940397,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944744,"byte_end":13944765,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944698,"byte_end":13944739,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944800,"byte_end":13944802,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944771,"byte_end":13944795,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944676,"byte_end":13944691,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1271}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944594,"byte_end":13944649,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946724,"byte_end":13946741,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945538,"byte_end":13945679,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945680,"byte_end":13945683,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945684,"byte_end":13945722,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945723,"byte_end":13945761,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945762,"byte_end":13945765,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945766,"byte_end":13945779,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945780,"byte_end":13945847,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945848,"byte_end":13945851,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945852,"byte_end":13945885,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945886,"byte_end":13945915,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945916,"byte_end":13945919,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945920,"byte_end":13945927,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945928,"byte_end":13945984,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13945985,"byte_end":13946019,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946020,"byte_end":13946023,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946024,"byte_end":13946029,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946030,"byte_end":13946077,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946078,"byte_end":13946131,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946132,"byte_end":13946209,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946210,"byte_end":13946245,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946246,"byte_end":13946267,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946268,"byte_end":13946318,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946319,"byte_end":13946382,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946383,"byte_end":13946446,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946447,"byte_end":13946510,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946511,"byte_end":13946567,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946568,"byte_end":13946617,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946618,"byte_end":13946630,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946631,"byte_end":13946638,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946639,"byte_end":13946646,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13946647,"byte_end":13946650,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948076,"byte_end":13948079,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947634,"byte_end":13947702,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947707,"byte_end":13947710,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947715,"byte_end":13947725,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947730,"byte_end":13947733,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947738,"byte_end":13947817,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947822,"byte_end":13947896,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947901,"byte_end":13947968,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947973,"byte_end":13947976,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947981,"byte_end":13948064,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949390,"byte_end":13949409,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948359,"byte_end":13948427,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948432,"byte_end":13948435,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948440,"byte_end":13948510,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948515,"byte_end":13948601,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948606,"byte_end":13948676,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948681,"byte_end":13948758,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948763,"byte_end":13948833,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948838,"byte_end":13948861,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948866,"byte_end":13948869,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948874,"byte_end":13948884,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948889,"byte_end":13948892,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948897,"byte_end":13948979,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13948984,"byte_end":13949057,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949062,"byte_end":13949139,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949144,"byte_end":13949217,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949222,"byte_end":13949297,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949302,"byte_end":13949305,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949310,"byte_end":13949378,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13950197,"byte_end":13950207,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949666,"byte_end":13949717,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949722,"byte_end":13949725,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949730,"byte_end":13949737,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949742,"byte_end":13949761,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949766,"byte_end":13949811,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949816,"byte_end":13949819,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949824,"byte_end":13949896,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949901,"byte_end":13949948,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949953,"byte_end":13949960,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949965,"byte_end":13949972,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13949977,"byte_end":13950022,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13950027,"byte_end":13950030,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13950035,"byte_end":13950128,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13950133,"byte_end":13950173,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13950178,"byte_end":13950185,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954302,"byte_end":13954324,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954255,"byte_end":13954297,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954360,"byte_end":13954362,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954330,"byte_end":13954355,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954226,"byte_end":13954248,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954143,"byte_end":13954199,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1350},{"krate":0,"index":1388},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1458}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\cfg.rs","byte_start":6084,"byte_end":6106,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13954931,"byte_end":13954964,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13954965,"byte_end":13954968,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These types are often used in combination with hyper or reqwest, as they","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13954969,"byte_end":13955045,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13955046,"byte_end":13955110,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13955111,"byte_end":13955114,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13955115,"byte_end":13955178,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\mod.rs","byte_start":13955179,"byte_end":13955218,"line_start":7,"line_end":7,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956506,"byte_end":13956514,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"pub async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/\nwhere R: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955583,"byte_end":13955661,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955662,"byte_end":13955665,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955666,"byte_end":13955695,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955696,"byte_end":13955699,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955700,"byte_end":13955713,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955714,"byte_end":13955717,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955718,"byte_end":13955725,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955726,"byte_end":13955759,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955760,"byte_end":13955791,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955792,"byte_end":13955818,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955819,"byte_end":13955868,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955869,"byte_end":13955889,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955890,"byte_end":13955936,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955937,"byte_end":13955940,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13955941,"byte_end":13956019,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956020,"byte_end":13956033,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956034,"byte_end":13956138,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956139,"byte_end":13956142,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956143,"byte_end":13956177,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956178,"byte_end":13956200,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956201,"byte_end":13956204,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956205,"byte_end":13956215,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956216,"byte_end":13956235,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956236,"byte_end":13956289,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956290,"byte_end":13956293,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956294,"byte_end":13956313,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956314,"byte_end":13956332,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956333,"byte_end":13956342,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956343,"byte_end":13956348,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956349,"byte_end":13956352,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956353,"byte_end":13956397,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956398,"byte_end":13956422,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956423,"byte_end":13956463,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956464,"byte_end":13956476,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956477,"byte_end":13956484,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956485,"byte_end":13956492,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13958392,"byte_end":13958404,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13958888,"byte_end":13958891,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13958681,"byte_end":13958742,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13958747,"byte_end":13958783,"line_start":58,"line_end":58,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13958788,"byte_end":13958791,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13958796,"byte_end":13958835,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13958840,"byte_end":13958876,"line_start":61,"line_end":61,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13961836,"byte_end":13961848,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962465,"byte_end":13962468,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962047,"byte_end":13962127,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962132,"byte_end":13962135,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962140,"byte_end":13962216,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962221,"byte_end":13962292,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962297,"byte_end":13962342,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962347,"byte_end":13962350,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962355,"byte_end":13962390,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962395,"byte_end":13962418,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962423,"byte_end":13962453,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962984,"byte_end":13962991,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962847,"byte_end":13962893,"line_start":97,"line_end":97,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962898,"byte_end":13962901,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962906,"byte_end":13962972,"line_start":99,"line_end":99,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963183,"byte_end":13963190,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963038,"byte_end":13963092,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963097,"byte_end":13963100,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963105,"byte_end":13963171,"line_start":106,"line_end":106,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963401,"byte_end":13963412,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963249,"byte_end":13963310,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963315,"byte_end":13963318,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963323,"byte_end":13963389,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963643,"byte_end":13963653,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963492,"byte_end":13963555,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963560,"byte_end":13963563,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963568,"byte_end":13963631,"line_start":120,"line_end":120,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":186},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":375}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":77874,"byte_end":77887,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":77743,"byte_end":77816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":77817,"byte_end":77820,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":77821,"byte_end":77862,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78081,"byte_end":78084,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78036,"byte_end":78069,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78248,"byte_end":78253,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78211,"byte_end":78236,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78359,"byte_end":78370,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78305,"byte_end":78347,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78485,"byte_end":78495,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78440,"byte_end":78473,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":79229,"byte_end":79241,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78556,"byte_end":78604,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78609,"byte_end":78612,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78617,"byte_end":78658,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78663,"byte_end":78666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78671,"byte_end":78733,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78738,"byte_end":78798,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78803,"byte_end":78863,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78868,"byte_end":78871,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78876,"byte_end":78951,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78956,"byte_end":79024,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":79029,"byte_end":79105,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":79110,"byte_end":79178,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":79183,"byte_end":79217,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80669,"byte_end":80686,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80385,"byte_end":80437,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80442,"byte_end":80445,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80450,"byte_end":80526,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80531,"byte_end":80565,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80570,"byte_end":80573,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80578,"byte_end":80657,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81146,"byte_end":81157,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80759,"byte_end":80801,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80806,"byte_end":80809,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80814,"byte_end":80887,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80892,"byte_end":80932,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80937,"byte_end":80940,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80945,"byte_end":81015,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81020,"byte_end":81054,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81059,"byte_end":81062,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81067,"byte_end":81134,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82300,"byte_end":82317,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82100,"byte_end":82157,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82158,"byte_end":82161,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82162,"byte_end":82229,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82230,"byte_end":82288,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82495,"byte_end":82498,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82412,"byte_end":82483,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83079,"byte_end":83082,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82864,"byte_end":82916,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82921,"byte_end":82924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82929,"byte_end":83001,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83006,"byte_end":83067,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83525,"byte_end":83532,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83284,"byte_end":83336,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83341,"byte_end":83344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83349,"byte_end":83422,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83427,"byte_end":83497,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83502,"byte_end":83513,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85372,"byte_end":85379,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85308,"byte_end":85360,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85665,"byte_end":85669,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85610,"byte_end":85653,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":1540},{"krate":0,"index":1549},{"krate":0,"index":1553},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":442}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":86782,"byte_end":86817,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1543},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88764,"byte_end":88768,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88777,"byte_end":88782,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88745,"byte_end":88751,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1546}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":86994,"byte_end":87100,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87101,"byte_end":87104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87105,"byte_end":87195,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87196,"byte_end":87199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87200,"byte_end":87235,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87236,"byte_end":87239,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87240,"byte_end":87253,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87254,"byte_end":87257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87258,"byte_end":87295,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87296,"byte_end":87299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87300,"byte_end":87319,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87320,"byte_end":87362,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87363,"byte_end":87413,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87414,"byte_end":87465,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87466,"byte_end":87484,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87485,"byte_end":87506,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87507,"byte_end":87549,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87550,"byte_end":87583,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87584,"byte_end":87600,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87601,"byte_end":87695,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87696,"byte_end":87706,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87707,"byte_end":87710,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87711,"byte_end":87758,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87759,"byte_end":87764,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87765,"byte_end":87772,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87773,"byte_end":87776,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87977,"byte_end":87980,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87981,"byte_end":88067,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88068,"byte_end":88078,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88079,"byte_end":88082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88083,"byte_end":88090,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88091,"byte_end":88126,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88127,"byte_end":88169,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88170,"byte_end":88220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88221,"byte_end":88272,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88273,"byte_end":88276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88277,"byte_end":88295,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88296,"byte_end":88317,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88318,"byte_end":88360,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88361,"byte_end":88408,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88409,"byte_end":88425,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88426,"byte_end":88475,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88476,"byte_end":88486,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88487,"byte_end":88490,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88491,"byte_end":88524,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88525,"byte_end":88565,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88566,"byte_end":88598,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88599,"byte_end":88604,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88605,"byte_end":88612,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88613,"byte_end":88635,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2433,"byte_end":2446,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"pub fn poll_read_buf<T: AsyncRead,\n                     B: BufMut>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1204,"byte_end":1289,"line_start":67,"line_end":67,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1294,"byte_end":1297,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1302,"byte_end":1328,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1333,"byte_end":1336,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1341,"byte_end":1354,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1359,"byte_end":1362,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1367,"byte_end":1374,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1379,"byte_end":1412,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1417,"byte_end":1448,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1453,"byte_end":1479,"line_start":76,"line_end":76,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1484,"byte_end":1538,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1543,"byte_end":1576,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1581,"byte_end":1603,"line_start":79,"line_end":79,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1608,"byte_end":1628,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1633,"byte_end":1679,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1684,"byte_end":1687,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1692,"byte_end":1770,"line_start":83,"line_end":83,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1775,"byte_end":1788,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1793,"byte_end":1897,"line_start":85,"line_end":85,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1902,"byte_end":1905,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1910,"byte_end":1944,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1949,"byte_end":1971,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1976,"byte_end":1979,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1984,"byte_end":1994,"line_start":90,"line_end":90,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":1999,"byte_end":2018,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2023,"byte_end":2109,"line_start":92,"line_end":92,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2114,"byte_end":2117,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2122,"byte_end":2141,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2146,"byte_end":2164,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2169,"byte_end":2178,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2183,"byte_end":2188,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2193,"byte_end":2196,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2201,"byte_end":2245,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2250,"byte_end":2274,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2279,"byte_end":2319,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2324,"byte_end":2336,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2341,"byte_end":2348,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":2353,"byte_end":2360,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4734,"byte_end":4748,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"pub fn poll_write_buf<T: AsyncWrite,\n                      B: Buf>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3362,"byte_end":3430,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3435,"byte_end":3494,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3499,"byte_end":3502,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3507,"byte_end":3584,"line_start":139,"line_end":139,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3589,"byte_end":3609,"line_start":140,"line_end":140,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3614,"byte_end":3617,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3622,"byte_end":3636,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3641,"byte_end":3644,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3649,"byte_end":3720,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3725,"byte_end":3737,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3742,"byte_end":3745,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3750,"byte_end":3763,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3768,"byte_end":3807,"line_start":148,"line_end":148,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3812,"byte_end":3830,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3835,"byte_end":3859,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3864,"byte_end":3867,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3872,"byte_end":3891,"line_start":152,"line_end":152,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3896,"byte_end":3920,"line_start":153,"line_end":153,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3925,"byte_end":3947,"line_start":154,"line_end":154,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3952,"byte_end":3985,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3990,"byte_end":3993,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":3998,"byte_end":4016,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4021,"byte_end":4060,"line_start":158,"line_end":158,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4065,"byte_end":4119,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4124,"byte_end":4176,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4181,"byte_end":4184,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4189,"byte_end":4259,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4264,"byte_end":4284,"line_start":163,"line_end":163,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4289,"byte_end":4324,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4329,"byte_end":4412,"line_start":165,"line_end":165,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4417,"byte_end":4426,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4431,"byte_end":4434,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4439,"byte_end":4453,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4458,"byte_end":4463,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4468,"byte_end":4475,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4480,"byte_end":4483,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4488,"byte_end":4511,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4516,"byte_end":4557,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4562,"byte_end":4591,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":4596,"byte_end":4661,"line_start":175,"line_end":175,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13865060,"byte_end":13865070,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13865221,"byte_end":13865231,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13865558,"byte_end":13865568,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13875746,"byte_end":13875755,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13875955,"byte_end":13875965,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876116,"byte_end":13876125,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876448,"byte_end":13876458,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876704,"byte_end":13876712,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876809,"byte_end":13876817,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876928,"byte_end":13876936,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13877036,"byte_end":13877044,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13877154,"byte_end":13877164,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13882746,"byte_end":13882756,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13885592,"byte_end":13885598,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889410,"byte_end":13889416,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13894731,"byte_end":13894737,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13895053,"byte_end":13895059,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13895774,"byte_end":13895780,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896820,"byte_end":13896831,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13897758,"byte_end":13897768,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898657,"byte_end":13898667,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900764,"byte_end":13900774,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13901087,"byte_end":13901097,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13901823,"byte_end":13901833,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13902812,"byte_end":13902823,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903179,"byte_end":13903190,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13905299,"byte_end":13905310,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13906074,"byte_end":13906085,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13906326,"byte_end":13906337,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921345,"byte_end":13921365,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13924698,"byte_end":13924718,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13925604,"byte_end":13925624,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13926965,"byte_end":13926985,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927078,"byte_end":13927085,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936684,"byte_end":13936691,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936817,"byte_end":13936842,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13937000,"byte_end":13937025,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13937160,"byte_end":13937185,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938254,"byte_end":13938264,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940806,"byte_end":13940816,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944192,"byte_end":13944202,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944525,"byte_end":13944535,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944840,"byte_end":13944855,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13945137,"byte_end":13945152,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13945269,"byte_end":13945284,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947610,"byte_end":13947627,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13950276,"byte_end":13950293,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13953585,"byte_end":13953602,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13953966,"byte_end":13953983,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954400,"byte_end":13954422,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954751,"byte_end":13954773,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954904,"byte_end":13954926,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956743,"byte_end":13956752,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13958659,"byte_end":13958671,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13959053,"byte_end":13959065,"line_start":70,"line_end":70,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13961939,"byte_end":13961951,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962822,"byte_end":13962834,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963723,"byte_end":13963735,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13964496,"byte_end":13964508,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":496}},{"kind":"Mod","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":13863472,"byte_end":13863488,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":940}},{"kind":"Mod","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":798,"byte_end":800,"line_start":41,"line_end":41,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1308}},{"kind":"Mod","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":378}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13865060,"byte_end":13865070,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13865221,"byte_end":13865231,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":13865558,"byte_end":13865568,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13875746,"byte_end":13875755,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2810}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13875955,"byte_end":13875965,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2810}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876116,"byte_end":13876125,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876448,"byte_end":13876458,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":628},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876704,"byte_end":13876712,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2435}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876809,"byte_end":13876817,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2438}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13876928,"byte_end":13876936,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2435}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13877036,"byte_end":13877044,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2438}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13877154,"byte_end":13877164,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1778},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":13882746,"byte_end":13882756,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1778},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13885592,"byte_end":13885598,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13889410,"byte_end":13889416,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13894731,"byte_end":13894737,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1728},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13895053,"byte_end":13895059,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1728},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13895774,"byte_end":13895780,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1728},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":13896820,"byte_end":13896831,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13897758,"byte_end":13897768,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13898657,"byte_end":13898667,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13900764,"byte_end":13900774,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1687},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13901087,"byte_end":13901097,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1687},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":13901823,"byte_end":13901833,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13902812,"byte_end":13902823,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13903179,"byte_end":13903190,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13905299,"byte_end":13905310,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1646},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13906074,"byte_end":13906085,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1646},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":13906326,"byte_end":13906337,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1646},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13921345,"byte_end":13921365,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13924698,"byte_end":13924718,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13925604,"byte_end":13925624,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1230},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13926965,"byte_end":13926985,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":2810}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13927078,"byte_end":13927085,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936684,"byte_end":13936691,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1218},"to":{"krate":2,"index":2810}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13936817,"byte_end":13936842,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13937000,"byte_end":13937025,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":8819}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":13937160,"byte_end":13937185,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2326}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13938254,"byte_end":13938264,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13940806,"byte_end":13940816,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944192,"byte_end":13944202,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1246},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944525,"byte_end":13944535,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":2810}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13944840,"byte_end":13944855,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":8819}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13945137,"byte_end":13945152,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":13945269,"byte_end":13945284,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":2326}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13947610,"byte_end":13947627,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13950276,"byte_end":13950293,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13953585,"byte_end":13953602,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13953966,"byte_end":13953983,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":2810}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954400,"byte_end":13954422,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8819}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954751,"byte_end":13954773,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":13954904,"byte_end":13954926,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1300},"to":{"krate":1,"index":2326}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\read_buf.rs","byte_start":13956743,"byte_end":13956752,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":12026}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13958659,"byte_end":13958671,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\reader_stream.rs","byte_start":13959053,"byte_end":13959065,"line_start":70,"line_end":70,"column_start":31,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1611},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13961939,"byte_end":13961951,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13962822,"byte_end":13962834,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13963723,"byte_end":13963735,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1564},"to":{"krate":16,"index":224}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\io\\stream_reader.rs","byte_start":13964496,"byte_end":13964508,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1564},"to":{"krate":16,"index":182}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2844}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2457}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":2810}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":12026}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":3054}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":3067}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1532},"to":{"krate":2,"index":2457}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1532},"to":{"krate":15,"index":17}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":286},"to":{"krate":14,"index":96}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2457}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":2729}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":12026}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2844}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2873}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":12026}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1540},"to":{"krate":16,"index":224}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1540},"to":{"krate":16,"index":182}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1540},"to":{"krate":16,"index":263}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1540},"to":{"krate":16,"index":303}},{"span":{"file_name":"C:\\Users\\hclark7\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1540},"to":{"krate":14,"index":96}}]}